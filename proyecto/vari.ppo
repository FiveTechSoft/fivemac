#line 209 "/Users/manuel/harbour/include/hbclass.ch"
DECLARE HBClass  New( cName AS STRING, OPTIONAL SuperParams ) AS CLASS HBClass  Create() AS OBJECT  Instance() AS OBJECT  AddClsMethod( cName AS STRING, @MethodName(), nScope AS NUMERIC, n2 AS NUMERIC, n3 AS NUMERIC )  AddMultiClsData( cType AS STRING, uVal, nScope AS NUMERIC, aDatas AS ARRAY OF STRING )  AddMultiData( cType AS STRING, uVal, nScope AS NUMERIC, aDatas AS ARRAY OF STRING, x AS LOGICAL, lPer AS LOGICAL )  AddMethod( cName AS STRING, @MethodName(), nScope AS NUMERIC )  AddInLine( cName AS STRING, bBlock AS CODEBLOCK, nScope AS NUMERIC )  AddVirtual( cName AS STRING )
#line 16 "/Users/manuel/fivemac/include/FiveMac.ch"
EXTERNAL HB_GT_NUL_DEFAULT, ErrorLink, MsgBeep
#line 6 "vari.prg"
Function pausa(cMsg)
Msginfo(cMsg)
return nil



Function Compila( cBlock)
 return &("{||"+cBlock +"}")


Function SoloAbre(cfichero)
local cFich:= cDbfPath+cFichero
     dbUseArea( .T.,, (cfich), (cCheckArea(cfichero)), if(.T. .OR. .F., !.F., NIL), .F. )

Return Alias()



function cCheckArea( cDbfName )
 local n      := 2
 local cAlias := cDbfName
   while Select( cAlias ) <> 0
      cAlias = cDbfName + AllTrim( Str( n++ ) )
   end
return cAlias



Function Abrimos(cFile,cVia)
  if !Usamos(cFile,cCheckArea(cFile))
      Return nil
  endif
RETURN Alias()



Function Usamos(fichero,alias)
    local cFichero:= cDbfPath+fichero
    If( alias == nil, alias := Fichero, ) ;
     dbUseArea( .T., "DBFCDX", (cFichero), (alias), if(.T. .OR. .F., !.F., NIL), .F. )

Return  !netErr()
